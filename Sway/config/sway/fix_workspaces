#!/usr/bin/python3

import json
import os
import subprocess
import sys
import time


def run_command(command):
	result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	return result.stdout.decode('utf-8').rstrip("\n")

def get_outputs():
	return sorted(json.loads(run_command("swaymsg -t get_outputs")), key = lambda o : o['rect']['x'])


pids = run_command("pgrep -f \"python3 .*/fix_workspace\"").split("\n")
pids.remove(str(os.getpid()))
if len(pids) > 0:
	sys.exit(0)

outputs = ['DP-1', 'DP-2']
good = 0
while good < 3:
	time.sleep(1)
	outputs_info = get_outputs()
	if len(outputs_info) < len (outputs):
		good = 0
	else:
		for o in outputs_info:
			if not o['dpms']:
				good = 0
				break
		else:
			good += 1

run_command("swaymsg \"output DP-1 scale 2 ; output DP-2 scale 2 ; output DP-2 position 1920 0\"")

output = run_command("swaymsg -t get_workspaces")
workspaces = json.loads(output)
focused = '1'
visible = []
delay = 0.1

workspace_commands = []
for workspace in workspaces:
	name = workspace['name']
	if name == 'Game':
		continue
	if len(workspace['focus']) == 0:
		continue
	if workspace['focused']:
		focused = name
	if workspace['visible'] and not workspace['focused']:
		visible.append(name)
	output = workspace['output']
	other_output = 'DP-2'
	if output == 'DP-2':
		other_output = 'DP-1'
	workspace_commands.append([name, other_output, output])

for wc in workspace_commands:
	run_command("swaymsg \"workspace {0}\" ; swaymsg \"move workspace to output {1}\"".format(wc[0], wc[1]))
	time.sleep(delay)
	run_command("swaymsg \"workspace {0}\" ; move workspace to output {0}\"".format(wc[0], wc[2]))
	time.sleep(delay)
	correct_output = outputs[(int(wc[0]) + 1) % 2]
	run_command("swaymsg \"workspace {0}\" ; swaymsg \"move workspace to output {1}\"".format(wc[0], correct_output))
	time.sleep(delay)

for w in visible:
	run_command("swaymsg \"workspace {}\"".format(w))
	time.sleep(delay)

run_command("swaymsg \"workspace {}\"".format(focused))
run_command("swaymsg \"reload\"")
